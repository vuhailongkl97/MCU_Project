ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.system_init,"ax",%progbits
  18              		.align	1
  19              		.global	system_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	system_init:
  26              	.LFB0:
  27              		.file 1 "Src/clock.c"
   1:Src/clock.c   **** #include "project.h"
   2:Src/clock.c   **** 
   3:Src/clock.c   **** 
   4:Src/clock.c   **** 
   5:Src/clock.c   **** // cau hinh max speed rcc
   6:Src/clock.c   **** void system_init(u32_t div_m, u32_t mul_n, u32_t div_p, u32_t system_source,u32_t div_ahb , u32_t d
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 30B4     		push	{r4, r5}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 5, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
   7:Src/clock.c   **** 	
   8:Src/clock.c   ****   volatile u32_t temp_reg;
   9:Src/clock.c   ****   volatile u32_t timeout;
  10:Src/clock.c   ****   
  11:Src/clock.c   ****   		//enable FPU
  12:Src/clock.c   **** 	temp_reg = read_reg(FPU_CPACR, ~0u);
  42              		.loc 1 12 0
  43 0004 724D     		ldr	r5, .L11
  44 0006 2C68     		ldr	r4, [r5]
  45 0008 0194     		str	r4, [sp, #4]
  13:Src/clock.c   **** 	temp_reg |= (0xF <<20);
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 2


  46              		.loc 1 13 0
  47 000a 019C     		ldr	r4, [sp, #4]
  48 000c 44F47004 		orr	r4, r4, #15728640
  49 0010 0194     		str	r4, [sp, #4]
  14:Src/clock.c   **** 	write_reg(FPU_CPACR , temp_reg) ; 
  50              		.loc 1 14 0
  51 0012 019C     		ldr	r4, [sp, #4]
  52 0014 2C60     		str	r4, [r5]
  53              	.LVL1:
  15:Src/clock.c   ****   
  16:Src/clock.c   ****  
  17:Src/clock.c   ****   /* Disable all interrupts */
  18:Src/clock.c   ****    write_reg(RCC_CIR, 0x00000000U);
  54              		.loc 1 18 0
  55 0016 6F4C     		ldr	r4, .L11+4
  56 0018 0025     		movs	r5, #0
  57 001a 2560     		str	r5, [r4]
  19:Src/clock.c   **** 
  20:Src/clock.c   **** 
  21:Src/clock.c   ****    // __HAL_RCC_SYSCFG_CLK_ENABLE();
  22:Src/clock.c   ****    write_reg(RCC_APB2ENR , (1u <<14 ));
  58              		.loc 1 22 0
  59 001c 3834     		adds	r4, r4, #56
  60 001e 4FF48045 		mov	r5, #16384
  61 0022 2560     		str	r5, [r4]
  23:Src/clock.c   ****    
  24:Src/clock.c   ****    //  __HAL_RCC_PWR_CLK_ENABLE();  	
  25:Src/clock.c   ****    write_reg(RCC_APB1ENR , (1u <<28 ));
  62              		.loc 1 25 0
  63 0024 043C     		subs	r4, r4, #4
  64 0026 4FF08055 		mov	r5, #268435456
  65 002a 2560     		str	r5, [r4]
  26:Src/clock.c   ****    
  27:Src/clock.c   ****    //__HAL_PWR_VOLTAGESCALING_ONFIG(PWR_REGULATOR_VOLTAGE_SCALE1); for using clock <= 100mhz 
  28:Src/clock.c   ****    temp_reg = read_reg(PWR_CR , ~(3u << 14 ));
  66              		.loc 1 28 0
  67 002c 6A4D     		ldr	r5, .L11+8
  68 002e 2C68     		ldr	r4, [r5]
  69 0030 24F44044 		bic	r4, r4, #49152
  70 0034 0194     		str	r4, [sp, #4]
  29:Src/clock.c   ****    temp_reg |= (3u << 14);
  71              		.loc 1 29 0
  72 0036 019C     		ldr	r4, [sp, #4]
  73 0038 44F44044 		orr	r4, r4, #49152
  74 003c 0194     		str	r4, [sp, #4]
  30:Src/clock.c   ****    write_reg( PWR_CR , temp_reg);
  75              		.loc 1 30 0
  76 003e 019C     		ldr	r4, [sp, #4]
  77 0040 2C60     		str	r4, [r5]
  31:Src/clock.c   ****    
  32:Src/clock.c   ****    //HSE clock bypass
  33:Src/clock.c   ****    	temp_reg = read_reg(RCC_CR, ~(1u << 18 ));
  78              		.loc 1 33 0
  79 0042 05F5E435 		add	r5, r5, #116736
  80 0046 2C68     		ldr	r4, [r5]
  81 0048 24F48024 		bic	r4, r4, #262144
  82 004c 0194     		str	r4, [sp, #4]
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 3


  34:Src/clock.c   **** 	temp_reg |= (0u << 18);
  83              		.loc 1 34 0
  84 004e 019C     		ldr	r4, [sp, #4]
  85 0050 0194     		str	r4, [sp, #4]
  35:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
  86              		.loc 1 35 0
  87 0052 019C     		ldr	r4, [sp, #4]
  88 0054 2C60     		str	r4, [r5]
  36:Src/clock.c   **** 	
  37:Src/clock.c   **** 	
  38:Src/clock.c   **** 	//bat hse
  39:Src/clock.c   **** 	temp_reg = read_reg(RCC_CR, ~(1u << 16 ));
  89              		.loc 1 39 0
  90 0056 24F48034 		bic	r4, r4, #65536
  91 005a 0194     		str	r4, [sp, #4]
  40:Src/clock.c   **** 	temp_reg |= (1u << 16);
  92              		.loc 1 40 0
  93 005c 019C     		ldr	r4, [sp, #4]
  94 005e 44F48034 		orr	r4, r4, #65536
  95 0062 0194     		str	r4, [sp, #4]
  41:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
  96              		.loc 1 41 0
  97 0064 019C     		ldr	r4, [sp, #4]
  98 0066 2C60     		str	r4, [r5]
  42:Src/clock.c   **** 	
  43:Src/clock.c   **** 	timeout = 0xFF;
  99              		.loc 1 43 0
 100 0068 FF24     		movs	r4, #255
 101 006a 0094     		str	r4, [sp]
 102              	.L3:
  44:Src/clock.c   ****     do {
  45:Src/clock.c   ****        
  46:Src/clock.c   ****         timeout--;
 103              		.loc 1 46 0 discriminator 2
 104 006c 009C     		ldr	r4, [sp]
 105 006e 013C     		subs	r4, r4, #1
 106 0070 0094     		str	r4, [sp]
  47:Src/clock.c   ****     } while ((0 == (read_reg(RCC_CR, (1u << 17)))) && (timeout > 0));
 107              		.loc 1 47 0 discriminator 2
 108 0072 5A4C     		ldr	r4, .L11+12
 109 0074 2468     		ldr	r4, [r4]
 110 0076 14F4003F 		tst	r4, #131072
 111 007a 02D1     		bne	.L2
 112              		.loc 1 47 0 is_stmt 0 discriminator 1
 113 007c 009D     		ldr	r5, [sp]
 114 007e 002D     		cmp	r5, #0
 115 0080 F4D1     		bne	.L3
 116              	.L2:
  48:Src/clock.c   **** 	
  49:Src/clock.c   **** 	
  50:Src/clock.c   ****     
  51:Src/clock.c   **** 	/* Disable the main PLL. */
  52:Src/clock.c   ****     temp_reg = read_reg(RCC_CR, ~(1 << 24));
 117              		.loc 1 52 0 is_stmt 1
 118 0082 24F08074 		bic	r4, r4, #16777216
 119 0086 0194     		str	r4, [sp, #4]
  53:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 4


 120              		.loc 1 53 0
 121 0088 019D     		ldr	r5, [sp, #4]
 122 008a 544C     		ldr	r4, .L11+12
 123 008c 2560     		str	r5, [r4]
  54:Src/clock.c   **** 	
  55:Src/clock.c   **** 	/* Wait till PLL is disable */
  56:Src/clock.c   ****     timeout = 0xFFF;
 124              		.loc 1 56 0
 125 008e 40F6FF74 		movw	r4, #4095
 126 0092 0094     		str	r4, [sp]
 127              	.L5:
  57:Src/clock.c   ****     do {
  58:Src/clock.c   ****         timeout--;
 128              		.loc 1 58 0 discriminator 2
 129 0094 009C     		ldr	r4, [sp]
 130 0096 013C     		subs	r4, r4, #1
 131 0098 0094     		str	r4, [sp]
  59:Src/clock.c   ****     } while ((0 != (read_reg(RCC_CR, (1 << 25)))) && (timeout > 0));
 132              		.loc 1 59 0 discriminator 2
 133 009a 504C     		ldr	r4, .L11+12
 134 009c 2468     		ldr	r4, [r4]
 135 009e 14F0007F 		tst	r4, #33554432
 136 00a2 02D0     		beq	.L4
 137              		.loc 1 59 0 is_stmt 0 discriminator 1
 138 00a4 009C     		ldr	r4, [sp]
 139 00a6 002C     		cmp	r4, #0
 140 00a8 F4D1     		bne	.L5
 141              	.L4:
  60:Src/clock.c   **** 	
  61:Src/clock.c   **** 	// can thiet lap ko se doc sai dia chi lenh , du lieu FLASH_LATENCY_2
  62:Src/clock.c   **** 	write_reg(FLASH_ACR , 0x03u);
 142              		.loc 1 62 0 is_stmt 1
 143 00aa 4D4C     		ldr	r4, .L11+16
 144 00ac 0325     		movs	r5, #3
 145 00ae 2560     		str	r5, [r4]
  63:Src/clock.c   **** 	
  64:Src/clock.c   **** 
  65:Src/clock.c   **** 	
  66:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x01 << 22));
 146              		.loc 1 66 0
 147 00b0 A4F57F74 		sub	r4, r4, #1020
 148 00b4 2568     		ldr	r5, [r4]
 149 00b6 25F48005 		bic	r5, r5, #4194304
 150 00ba 0195     		str	r5, [sp, #4]
  67:Src/clock.c   ****     temp_reg |= (1u <<22);
 151              		.loc 1 67 0
 152 00bc 019D     		ldr	r5, [sp, #4]
 153 00be 45F48005 		orr	r5, r5, #4194304
 154 00c2 0195     		str	r5, [sp, #4]
  68:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 155              		.loc 1 68 0
 156 00c4 019D     		ldr	r5, [sp, #4]
 157 00c6 2560     		str	r5, [r4]
  69:Src/clock.c   **** 	
  70:Src/clock.c   **** 
  71:Src/clock.c   ****     	
  72:Src/clock.c   **** 	
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 5


  73:Src/clock.c   **** 	
  74:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~0x3Fu);
 158              		.loc 1 74 0
 159 00c8 25F03F05 		bic	r5, r5, #63
 160 00cc 0195     		str	r5, [sp, #4]
  75:Src/clock.c   ****     temp_reg |= div_m;
 161              		.loc 1 75 0
 162 00ce 019D     		ldr	r5, [sp, #4]
 163 00d0 2843     		orrs	r0, r0, r5
 164              	.LVL2:
 165 00d2 0190     		str	r0, [sp, #4]
  76:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 166              		.loc 1 76 0
 167 00d4 0198     		ldr	r0, [sp, #4]
 168 00d6 2060     		str	r0, [r4]
  77:Src/clock.c   ****     
  78:Src/clock.c   **** 	// nhan *N   *100
  79:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x1FFu << 6));
 169              		.loc 1 79 0
 170 00d8 20F4FF40 		bic	r0, r0, #32640
 171 00dc 20F04000 		bic	r0, r0, #64
 172 00e0 0190     		str	r0, [sp, #4]
  80:Src/clock.c   ****     temp_reg |= (mul_n << 6);
 173              		.loc 1 80 0
 174 00e2 0198     		ldr	r0, [sp, #4]
 175 00e4 40EA8111 		orr	r1, r0, r1, lsl #6
 176              	.LVL3:
 177 00e8 0191     		str	r1, [sp, #4]
  81:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 178              		.loc 1 81 0
 179 00ea 0199     		ldr	r1, [sp, #4]
 180 00ec 2160     		str	r1, [r4]
  82:Src/clock.c   **** 	
  83:Src/clock.c   **** 	// chia /P  /2
  84:Src/clock.c   **** 
  85:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x3u<< 16));
 181              		.loc 1 85 0
 182 00ee 21F44031 		bic	r1, r1, #196608
 183 00f2 0191     		str	r1, [sp, #4]
  86:Src/clock.c   ****     temp_reg |= (div_p << 16);
 184              		.loc 1 86 0
 185 00f4 0199     		ldr	r1, [sp, #4]
 186 00f6 41EA0242 		orr	r2, r1, r2, lsl #16
 187              	.LVL4:
 188 00fa 0192     		str	r2, [sp, #4]
  87:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 189              		.loc 1 87 0
 190 00fc 019A     		ldr	r2, [sp, #4]
 191 00fe 2260     		str	r2, [r4]
  88:Src/clock.c   **** 	
  89:Src/clock.c   **** 	
  90:Src/clock.c   **** 	/* Enable the main PLL. */
  91:Src/clock.c   ****     temp_reg = read_reg(RCC_CR, ~(1 << 24));
 192              		.loc 1 91 0
 193 0100 3649     		ldr	r1, .L11+12
 194 0102 0A68     		ldr	r2, [r1]
 195 0104 22F08072 		bic	r2, r2, #16777216
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 6


 196 0108 0192     		str	r2, [sp, #4]
  92:Src/clock.c   ****     temp_reg |= (1 << 24);
 197              		.loc 1 92 0
 198 010a 019A     		ldr	r2, [sp, #4]
 199 010c 42F08072 		orr	r2, r2, #16777216
 200 0110 0192     		str	r2, [sp, #4]
  93:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
 201              		.loc 1 93 0
 202 0112 019A     		ldr	r2, [sp, #4]
 203 0114 0A60     		str	r2, [r1]
  94:Src/clock.c   **** 	
  95:Src/clock.c   **** 	/* Wait till PLL is ready */
  96:Src/clock.c   ****     timeout = 0xFFFF;
 204              		.loc 1 96 0
 205 0116 4FF6FF72 		movw	r2, #65535
 206 011a 0092     		str	r2, [sp]
 207              	.L7:
  97:Src/clock.c   ****     do {
  98:Src/clock.c   ****         timeout--;
 208              		.loc 1 98 0 discriminator 2
 209 011c 009A     		ldr	r2, [sp]
 210 011e 013A     		subs	r2, r2, #1
 211 0120 0092     		str	r2, [sp]
  99:Src/clock.c   ****     } while ((0 == (read_reg(RCC_CR, (1 << 25)))) && (timeout > 0));
 212              		.loc 1 99 0 discriminator 2
 213 0122 2E4A     		ldr	r2, .L11+12
 214 0124 1268     		ldr	r2, [r2]
 215 0126 12F0007F 		tst	r2, #33554432
 216 012a 02D1     		bne	.L6
 217              		.loc 1 99 0 is_stmt 0 discriminator 1
 218 012c 009A     		ldr	r2, [sp]
 219 012e 002A     		cmp	r2, #0
 220 0130 F4D1     		bne	.L7
 221              	.L6:
 100:Src/clock.c   **** 	
 101:Src/clock.c   **** 
 102:Src/clock.c   **** 	//  chia 1 
 103:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0xFu << 4));
 222              		.loc 1 103 0 is_stmt 1
 223 0132 2C4A     		ldr	r2, .L11+20
 224 0134 1168     		ldr	r1, [r2]
 225 0136 21F0F001 		bic	r1, r1, #240
 226 013a 0191     		str	r1, [sp, #4]
 104:Src/clock.c   **** 	temp_reg |= ( div_ahb << 4);
 227              		.loc 1 104 0
 228 013c 0199     		ldr	r1, [sp, #4]
 229 013e 0498     		ldr	r0, [sp, #16]
 230 0140 41EA0011 		orr	r1, r1, r0, lsl #4
 231 0144 0191     		str	r1, [sp, #4]
 105:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);	
 232              		.loc 1 105 0
 233 0146 0199     		ldr	r1, [sp, #4]
 234 0148 1160     		str	r1, [r2]
 106:Src/clock.c   **** 	
 107:Src/clock.c   **** 	 /* APB1 prescaler */
 108:Src/clock.c   **** 	// chia toi da
 109:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0x07u << 10));
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 7


 235              		.loc 1 109 0
 236 014a 21F4E051 		bic	r1, r1, #7168
 237 014e 0191     		str	r1, [sp, #4]
 110:Src/clock.c   **** 	temp_reg |= (APB_DIV16 << 10);
 238              		.loc 1 110 0
 239 0150 0199     		ldr	r1, [sp, #4]
 240 0152 41F4E051 		orr	r1, r1, #7168
 241 0156 0191     		str	r1, [sp, #4]
 111:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 242              		.loc 1 111 0
 243 0158 0199     		ldr	r1, [sp, #4]
 244 015a 1160     		str	r1, [r2]
 112:Src/clock.c   **** 	// APB2 giong APB1
 113:Src/clock.c   **** 	temp_reg = read_reg(RCC_CFGR, ~(0x07u << 13));
 245              		.loc 1 113 0
 246 015c 21F46041 		bic	r1, r1, #57344
 247 0160 0191     		str	r1, [sp, #4]
 114:Src/clock.c   **** 	temp_reg |= (APB_DIV16 << 13);
 248              		.loc 1 114 0
 249 0162 0199     		ldr	r1, [sp, #4]
 250 0164 41F46041 		orr	r1, r1, #57344
 251 0168 0191     		str	r1, [sp, #4]
 115:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 252              		.loc 1 115 0
 253 016a 0199     		ldr	r1, [sp, #4]
 254 016c 1160     		str	r1, [r2]
 116:Src/clock.c   **** 	
 117:Src/clock.c   **** 
 118:Src/clock.c   **** 	//select source
 119:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0x3u << 0));
 255              		.loc 1 119 0
 256 016e 21F00301 		bic	r1, r1, #3
 257 0172 0191     		str	r1, [sp, #4]
 120:Src/clock.c   ****     temp_reg |= (system_source << 0);
 258              		.loc 1 120 0
 259 0174 0199     		ldr	r1, [sp, #4]
 260 0176 1943     		orrs	r1, r1, r3
 261 0178 0191     		str	r1, [sp, #4]
 121:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 262              		.loc 1 121 0
 263 017a 0199     		ldr	r1, [sp, #4]
 264 017c 1160     		str	r1, [r2]
 122:Src/clock.c   ****     
 123:Src/clock.c   ****     // /* Wait till System clock switch is ready */
 124:Src/clock.c   ****     timeout = 0xFFFFFF;
 265              		.loc 1 124 0
 266 017e 6FF07F42 		mvn	r2, #-16777216
 267 0182 0092     		str	r2, [sp]
 268              	.L9:
 125:Src/clock.c   ****     do {
 126:Src/clock.c   ****         timeout--;
 269              		.loc 1 126 0 discriminator 2
 270 0184 009A     		ldr	r2, [sp]
 271 0186 013A     		subs	r2, r2, #1
 272 0188 0092     		str	r2, [sp]
 127:Src/clock.c   ****     } while (((system_source << 2) != ( read_reg(RCC_CFGR, (0x3 << 2)))) && (timeout > 0));
 273              		.loc 1 127 0 discriminator 2
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 8


 274 018a 164A     		ldr	r2, .L11+20
 275 018c 1268     		ldr	r2, [r2]
 276 018e 02F00C01 		and	r1, r2, #12
 277 0192 B1EB830F 		cmp	r1, r3, lsl #2
 278 0196 02D0     		beq	.L8
 279              		.loc 1 127 0 is_stmt 0 discriminator 1
 280 0198 0099     		ldr	r1, [sp]
 281 019a 0029     		cmp	r1, #0
 282 019c F2D1     		bne	.L9
 283              	.L8:
 128:Src/clock.c   **** 	
 129:Src/clock.c   **** 	
 130:Src/clock.c   ****     /* APB1 prescaler */
 131:Src/clock.c   **** 	//  apb1 chia 2
 132:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(7u << 10));
 284              		.loc 1 132 0 is_stmt 1
 285 019e 22F4E052 		bic	r2, r2, #7168
 286 01a2 0192     		str	r2, [sp, #4]
 133:Src/clock.c   **** 	temp_reg |=  (div_apb1 << 10);
 287              		.loc 1 133 0
 288 01a4 019B     		ldr	r3, [sp, #4]
 289              	.LVL5:
 290 01a6 059A     		ldr	r2, [sp, #20]
 291 01a8 43EA8223 		orr	r3, r3, r2, lsl #10
 292 01ac 0193     		str	r3, [sp, #4]
 134:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 293              		.loc 1 134 0
 294 01ae 019B     		ldr	r3, [sp, #4]
 295 01b0 0C4A     		ldr	r2, .L11+20
 296 01b2 1360     		str	r3, [r2]
 135:Src/clock.c   **** 	
 136:Src/clock.c   **** 	
 137:Src/clock.c   **** 	// apb2 chia 1
 138:Src/clock.c   **** 	temp_reg = read_reg(RCC_CFGR, ~(7u << 13));
 297              		.loc 1 138 0
 298 01b4 23F46043 		bic	r3, r3, #57344
 299 01b8 0193     		str	r3, [sp, #4]
 139:Src/clock.c   **** 	temp_reg |=  (div_apb2 << 10);
 300              		.loc 1 139 0
 301 01ba 019B     		ldr	r3, [sp, #4]
 302 01bc 0699     		ldr	r1, [sp, #24]
 303 01be 43EA8123 		orr	r3, r3, r1, lsl #10
 304 01c2 0193     		str	r3, [sp, #4]
 140:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 305              		.loc 1 140 0
 306 01c4 019B     		ldr	r3, [sp, #4]
 307 01c6 1360     		str	r3, [r2]
 141:Src/clock.c   **** 	
 142:Src/clock.c   **** 
 143:Src/clock.c   **** }
 308              		.loc 1 143 0
 309 01c8 02B0     		add	sp, sp, #8
 310              	.LCFI2:
 311              		.cfi_def_cfa_offset 8
 312              		@ sp needed
 313 01ca 30BC     		pop	{r4, r5}
 314              	.LCFI3:
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 9


 315              		.cfi_restore 5
 316              		.cfi_restore 4
 317              		.cfi_def_cfa_offset 0
 318 01cc 7047     		bx	lr
 319              	.L12:
 320 01ce 00BF     		.align	2
 321              	.L11:
 322 01d0 88ED00E0 		.word	-536810104
 323 01d4 0C380240 		.word	1073887244
 324 01d8 00700040 		.word	1073770496
 325 01dc 00380240 		.word	1073887232
 326 01e0 003C0240 		.word	1073888256
 327 01e4 08380240 		.word	1073887240
 328              		.cfi_endproc
 329              	.LFE0:
 331              		.section	.text.rcc_enableclk,"ax",%progbits
 332              		.align	1
 333              		.global	rcc_enableclk
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	rcc_enableclk:
 340              	.LFB1:
 144:Src/clock.c   **** void rcc_enableclk(){
 341              		.loc 1 144 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 145:Src/clock.c   **** 	u32_t temp_reg;
 146:Src/clock.c   **** 	
 147:Src/clock.c   **** 	// enable port h
 148:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<7));
 346              		.loc 1 148 0
 347 0000 024A     		ldr	r2, .L14
 348 0002 1368     		ldr	r3, [r2]
 349              	.LVL6:
 149:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 7 );
 150:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );	
 151:Src/clock.c   **** 
 152:Src/clock.c   **** 	//port d 
 153:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<3));
 154:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 3 );
 155:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );
 156:Src/clock.c   **** 	
 157:Src/clock.c   **** 	//port b
 158:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<1));
 159:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 1 );
 350              		.loc 1 159 0
 351 0004 43F08A03 		orr	r3, r3, #138
 352              	.LVL7:
 160:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );
 353              		.loc 1 160 0
 354 0008 1360     		str	r3, [r2]
 161:Src/clock.c   ****   
 162:Src/clock.c   **** }...
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 10


 355              		.loc 1 162 0
 356 000a 7047     		bx	lr
 357              	.L15:
 358              		.align	2
 359              	.L14:
 360 000c 30380240 		.word	1073887280
 361              		.cfi_endproc
 362              	.LFE1:
 364              		.text
 365              	.Letext0:
 366              		.file 2 "Inc/main.h"
 367              		.file 3 "Inc/stm32f4xx_it.h"
ARM GAS  E:\msys32\tmp\ccLRrr4g.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 clock.c
E:\msys32\tmp\ccLRrr4g.s:18     .text.system_init:00000000 $t
E:\msys32\tmp\ccLRrr4g.s:25     .text.system_init:00000000 system_init
E:\msys32\tmp\ccLRrr4g.s:322    .text.system_init:000001d0 $d
E:\msys32\tmp\ccLRrr4g.s:332    .text.rcc_enableclk:00000000 $t
E:\msys32\tmp\ccLRrr4g.s:339    .text.rcc_enableclk:00000000 rcc_enableclk
E:\msys32\tmp\ccLRrr4g.s:360    .text.rcc_enableclk:0000000c $d

NO UNDEFINED SYMBOLS
