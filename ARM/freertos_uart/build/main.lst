ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.idle_task,"ax",%progbits
  18              		.align	1
  19              		.global	idle_task
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	idle_task:
  26              	.LFB12:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** #include "project.h"
   3:Src/main.c    **** #include "string.h"
   4:Src/main.c    **** #include <stdlib.h>
   5:Src/main.c    **** TaskHandle_t pxTask = NULL;
   6:Src/main.c    **** TaskHandle_t pxTask_receive = NULL;
   7:Src/main.c    **** char ok = 1 ; 
   8:Src/main.c    **** 
   9:Src/main.c    **** void USART1_IRQHandler(){
  10:Src/main.c    **** 	
  11:Src/main.c    **** 	volatile u32_t temp ;
  12:Src/main.c    **** 	volatile unsigned char rx_data;
  13:Src/main.c    **** 	u32_t temp_reg;
  14:Src/main.c    **** 	BaseType_t xHigherPriorityTaskWoken  = pdFALSE;
  15:Src/main.c    **** 	
  16:Src/main.c    ****    	GPIO_TongglePin(mGPIOD , mGPIO_PIN(12));
  17:Src/main.c    ****     temp = read_reg(mUSART_SR(mUSART1), 1 << 6);
  18:Src/main.c    **** 	
  19:Src/main.c    **** 	if (0 != temp) /* Tx - TC flag */
  20:Src/main.c    ****     {
  21:Src/main.c    **** 		temp_reg = read_reg(mUSART_SR(mUSART1) , ~(1u << 6));
  22:Src/main.c    **** 		temp_reg |= (0u << 6);
  23:Src/main.c    ****         write_reg(mUSART_SR(mUSART1), temp_reg);
  24:Src/main.c    **** 		
  25:Src/main.c    **** 		if( ok == 0){ 
  26:Src/main.c    **** 			vTaskNotifyGiveFromISR(pxTask_receive , &xHigherPriorityTaskWoken);
  27:Src/main.c    **** 			portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
  28:Src/main.c    **** 		}
  29:Src/main.c    **** 		
  30:Src/main.c    ****     }
  31:Src/main.c    **** 	temp = read_reg(mUSART_SR(mUSART1), 1 << 5);
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 2


  32:Src/main.c    **** 	
  33:Src/main.c    ****     if (0 != temp)  /* Rx - RXNE flag */
  34:Src/main.c    ****     {
  35:Src/main.c    **** 		rx_data = read_reg(mUSART_DR(mUSART1) , 0x000000FF);
  36:Src/main.c    **** 		
  37:Src/main.c    **** 	    vTaskNotifyGiveFromISR(pxTask , &xHigherPriorityTaskWoken);
  38:Src/main.c    **** 		portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
  39:Src/main.c    ****     }
  40:Src/main.c    **** 
  41:Src/main.c    **** }
  42:Src/main.c    **** 
  43:Src/main.c    **** 
  44:Src/main.c    **** void vApplicationIdleHook( void ){
  45:Src/main.c    **** }
  46:Src/main.c    **** 
  47:Src/main.c    **** void vApplicationStackOverflowHook(){
  48:Src/main.c    **** 	while(1){
  49:Src/main.c    **** 		
  50:Src/main.c    **** 	}
  51:Src/main.c    **** }
  52:Src/main.c    **** void vApplicationMallocFailedHook(){
  53:Src/main.c    **** 	while(1){
  54:Src/main.c    **** 		
  55:Src/main.c    **** 	}
  56:Src/main.c    **** }
  57:Src/main.c    **** void rcc_enableclk(){
  58:Src/main.c    **** 	enable_rcc_gpioh();
  59:Src/main.c    **** 	enable_rcc_gpiod();
  60:Src/main.c    **** 	// for pb6 Rx , PB7 TX
  61:Src/main.c    **** 	enable_rcc_gpiob();
  62:Src/main.c    **** }
  63:Src/main.c    **** void init_interrupt( ){
  64:Src/main.c    **** 	
  65:Src/main.c    **** 	unsigned int temp_reg;
  66:Src/main.c    **** 	/* usart1 */
  67:Src/main.c    **** 
  68:Src/main.c    ****     /* Tx interrupt */
  69:Src/main.c    ****     temp_reg = read_reg(mUSART_CR1(mUSART1), ~(1 << 6));
  70:Src/main.c    ****     temp_reg |= (1 << 6);
  71:Src/main.c    ****     write_reg(mUSART_CR1(mUSART1), temp_reg);
  72:Src/main.c    **** 
  73:Src/main.c    ****     /* Rx interrupt - RXNEIE */
  74:Src/main.c    ****     temp_reg = read_reg(mUSART_CR1(mUSART1), ~(1 << 5));
  75:Src/main.c    ****     temp_reg |= (1 << 5);
  76:Src/main.c    ****     write_reg(mUSART_CR1(mUSART1), temp_reg);
  77:Src/main.c    **** 	
  78:Src/main.c    **** 	//temp_reg = read_reg(SCB_AIRCR , ~0u);
  79:Src/main.c    **** 	temp_reg = (0x5FAu << 16);
  80:Src/main.c    **** 	write_reg(SCB_AIRCR , temp_reg);
  81:Src/main.c    **** 	
  82:Src/main.c    **** 	temp_reg = read_reg(SCB_AIRCR , ~(0xFu << 8));
  83:Src/main.c    **** 	temp_reg |= (3u << 8);
  84:Src/main.c    **** 	write_reg(SCB_AIRCR , temp_reg);
  85:Src/main.c    **** 	
  86:Src/main.c    **** 	
  87:Src/main.c    ****     
  88:Src/main.c    **** 	mNVIC_SetPriority((USART1_IRQn) ,5);
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 3


  89:Src/main.c    **** 	mNVIC_EnableIRQ(USART1_IRQn);
  90:Src/main.c    **** 
  91:Src/main.c    ****     asm("cpsie i") ;	
  92:Src/main.c    **** 	
  93:Src/main.c    **** }
  94:Src/main.c    **** void config_pin()
  95:Src/main.c    **** {
  96:Src/main.c    **** 	mGPIO_TypeDef GPIO_Init;
  97:Src/main.c    **** 	GPIO_Init.mpin  =  mGPIO_PIN(15) | mGPIO_PIN(14)|mGPIO_PIN(13)|mGPIO_PIN(12);
  98:Src/main.c    **** 	GPIO_Init.moder = mGPIO_MODER_OUTPUT;
  99:Src/main.c    **** 	GPIO_Init.type = mPUSH_PULL;
 100:Src/main.c    **** 	GPIO_Init.pull  = mNO_PULL;
 101:Src/main.c    **** 	GPIO_Init.speed = mFAST_SPEED;
 102:Src/main.c    **** 	init_pin(mGPIOD , &GPIO_Init);
 103:Src/main.c    **** 	
 104:Src/main.c    **** 	
 105:Src/main.c    **** 	// TIM2  EXTERNAL INPUT
 106:Src/main.c    **** 	GPIO_Init.mpin  =  mGPIO_PIN(0);
 107:Src/main.c    **** 	GPIO_Init.moder = mGPIO_MODER_ALT;
 108:Src/main.c    **** 	GPIO_Init.type = mPUSH_PULL;
 109:Src/main.c    **** 	GPIO_Init.pull  = mNO_PULL;
 110:Src/main.c    **** 	GPIO_Init.speed = mFAST_SPEED;
 111:Src/main.c    **** 	GPIO_Init.alternate = 1;
 112:Src/main.c    **** 	init_pin(mGPIOA , &GPIO_Init); 
 113:Src/main.c    **** }
 114:Src/main.c    **** void idle_task(void * pvParameters ){
  28              		.loc 1 114 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
  39              	.LVL1:
  40              	.L2:
 115:Src/main.c    **** 
 116:Src/main.c    **** 	u32_t mpin;
 117:Src/main.c    **** 	while(1){
 118:Src/main.c    **** 		mpin = *(u32_t *)(pvParameters);
  41              		.loc 1 118 0 discriminator 1
  42 0004 2368     		ldr	r3, [r4]
  43              	.LVL2:
 119:Src/main.c    **** 		GPIO_TongglePin(mGPIOD , mGPIO_PIN(mpin));
  44              		.loc 1 119 0 discriminator 1
  45 0006 0121     		movs	r1, #1
  46 0008 9940     		lsls	r1, r1, r3
  47 000a 0348     		ldr	r0, .L4
  48 000c FFF7FEFF 		bl	GPIO_TongglePin
  49              	.LVL3:
 120:Src/main.c    **** 		  //xTaskNotifyGive(pxTask);
 121:Src/main.c    **** 		//xTaskNotify(pxTask,  123 , eSetValueWithoutOverwrite);
 122:Src/main.c    **** 		vTaskDelay(pdMS_TO_TICKS(100));
  50              		.loc 1 122 0 discriminator 1
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 4


  51 0010 6420     		movs	r0, #100
  52 0012 FFF7FEFF 		bl	vTaskDelay
  53              	.LVL4:
  54 0016 F5E7     		b	.L2
  55              	.L5:
  56              		.align	2
  57              	.L4:
  58 0018 000C0240 		.word	1073875968
  59              		.cfi_endproc
  60              	.LFE12:
  62              		.section	.text.notify_take_task,"ax",%progbits
  63              		.align	1
  64              		.global	notify_take_task
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	notify_take_task:
  71              	.LFB13:
 123:Src/main.c    **** 	}
 124:Src/main.c    **** 	
 125:Src/main.c    **** 	
 126:Src/main.c    **** }
 127:Src/main.c    **** void notify_take_task(void *pvParameters ){
  72              		.loc 1 127 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              	.LVL5:
  77 0000 00B5     		push	{lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 14, -4
  81 0002 83B0     		sub	sp, sp, #12
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 16
 128:Src/main.c    **** 	volatile u32_t    ulEventToProcess ; 
 129:Src/main.c    **** 	unsigned char rx_data;
 130:Src/main.c    **** 
 131:Src/main.c    **** 		ulEventToProcess = ulTaskNotifyTake(pdTRUE , pdMS_TO_TICKS(110));
  84              		.loc 1 131 0
  85 0004 6E21     		movs	r1, #110
  86 0006 0120     		movs	r0, #1
  87              	.LVL6:
  88 0008 FFF7FEFF 		bl	ulTaskNotifyTake
  89              	.LVL7:
  90 000c 0190     		str	r0, [sp, #4]
 132:Src/main.c    **** 		
 133:Src/main.c    **** 		if( ulEventToProcess != 0){
  91              		.loc 1 133 0
  92 000e 019B     		ldr	r3, [sp, #4]
  93 0010 13B9     		cbnz	r3, .L9
  94              	.L6:
 134:Src/main.c    **** 				rx_data = read_reg(mUSART_DR(mUSART1) , 0x000000FF);
 135:Src/main.c    **** 				usart_send_byte((unsigned char)rx_data);
 136:Src/main.c    **** 				GPIO_TongglePin(mGPIOD , mGPIO_PIN(13));
 137:Src/main.c    **** 	}
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 5


 138:Src/main.c    **** }
  95              		.loc 1 138 0
  96 0012 03B0     		add	sp, sp, #12
  97              	.LCFI3:
  98              		.cfi_remember_state
  99              		.cfi_def_cfa_offset 4
 100              		@ sp needed
 101 0014 5DF804FB 		ldr	pc, [sp], #4
 102              	.L9:
 103              	.LCFI4:
 104              		.cfi_restore_state
 105              	.LVL8:
 135:Src/main.c    **** 				GPIO_TongglePin(mGPIOD , mGPIO_PIN(13));
 106              		.loc 1 135 0
 107 0018 044B     		ldr	r3, .L10
 108              	.LVL9:
 109 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 110 001c FFF7FEFF 		bl	usart_send_byte
 111              	.LVL10:
 136:Src/main.c    **** 	}
 112              		.loc 1 136 0
 113 0020 4FF40051 		mov	r1, #8192
 114 0024 0248     		ldr	r0, .L10+4
 115 0026 FFF7FEFF 		bl	GPIO_TongglePin
 116              	.LVL11:
 117              		.loc 1 138 0
 118 002a F2E7     		b	.L6
 119              	.L11:
 120              		.align	2
 121              	.L10:
 122 002c 04100140 		.word	1073811460
 123 0030 000C0240 		.word	1073875968
 124              		.cfi_endproc
 125              	.LFE13:
 127              		.section	.text.USART1_IRQHandler,"ax",%progbits
 128              		.align	1
 129              		.global	USART1_IRQHandler
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	USART1_IRQHandler:
 136              	.LFB5:
   9:Src/main.c    **** 	
 137              		.loc 1 9 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 16
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 00B5     		push	{lr}
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145 0002 85B0     		sub	sp, sp, #20
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 24
  14:Src/main.c    **** 	
 148              		.loc 1 14 0
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 6


 149 0004 0023     		movs	r3, #0
 150 0006 0193     		str	r3, [sp, #4]
  16:Src/main.c    ****     temp = read_reg(mUSART_SR(mUSART1), 1 << 6);
 151              		.loc 1 16 0
 152 0008 4FF48051 		mov	r1, #4096
 153 000c 2048     		ldr	r0, .L18
 154 000e FFF7FEFF 		bl	GPIO_TongglePin
 155              	.LVL12:
  17:Src/main.c    **** 	
 156              		.loc 1 17 0
 157 0012 204B     		ldr	r3, .L18+4
 158 0014 1B68     		ldr	r3, [r3]
 159 0016 03F04003 		and	r3, r3, #64
 160 001a 0393     		str	r3, [sp, #12]
  19:Src/main.c    ****     {
 161              		.loc 1 19 0
 162 001c 039B     		ldr	r3, [sp, #12]
 163 001e 3BB1     		cbz	r3, .L13
  21:Src/main.c    **** 		temp_reg |= (0u << 6);
 164              		.loc 1 21 0
 165 0020 1C4A     		ldr	r2, .L18+4
 166 0022 1368     		ldr	r3, [r2]
 167 0024 23F04003 		bic	r3, r3, #64
 168              	.LVL13:
  23:Src/main.c    **** 		
 169              		.loc 1 23 0
 170 0028 1360     		str	r3, [r2]
  25:Src/main.c    **** 			vTaskNotifyGiveFromISR(pxTask_receive , &xHigherPriorityTaskWoken);
 171              		.loc 1 25 0
 172 002a 1B4B     		ldr	r3, .L18+8
 173              	.LVL14:
 174 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175 002e 4BB1     		cbz	r3, .L16
 176              	.LVL15:
 177              	.L13:
  31:Src/main.c    **** 	
 178              		.loc 1 31 0
 179 0030 184B     		ldr	r3, .L18+4
 180 0032 1B68     		ldr	r3, [r3]
 181 0034 03F02003 		and	r3, r3, #32
 182 0038 0393     		str	r3, [sp, #12]
  33:Src/main.c    ****     {
 183              		.loc 1 33 0
 184 003a 039B     		ldr	r3, [sp, #12]
 185 003c 9BB9     		cbnz	r3, .L17
 186              	.L12:
  41:Src/main.c    **** 
 187              		.loc 1 41 0
 188 003e 05B0     		add	sp, sp, #20
 189              	.LCFI7:
 190              		.cfi_remember_state
 191              		.cfi_def_cfa_offset 4
 192              		@ sp needed
 193 0040 5DF804FB 		ldr	pc, [sp], #4
 194              	.LVL16:
 195              	.L16:
 196              	.LCFI8:
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 7


 197              		.cfi_restore_state
  26:Src/main.c    **** 			portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 198              		.loc 1 26 0
 199 0044 01A9     		add	r1, sp, #4
 200 0046 154B     		ldr	r3, .L18+12
 201 0048 1868     		ldr	r0, [r3]
 202 004a FFF7FEFF 		bl	vTaskNotifyGiveFromISR
 203              	.LVL17:
  27:Src/main.c    **** 		}
 204              		.loc 1 27 0
 205 004e 019B     		ldr	r3, [sp, #4]
 206 0050 002B     		cmp	r3, #0
 207 0052 EDD0     		beq	.L13
  27:Src/main.c    **** 		}
 208              		.loc 1 27 0 is_stmt 0 discriminator 1
 209 0054 124B     		ldr	r3, .L18+16
 210 0056 4FF08052 		mov	r2, #268435456
 211 005a 1A60     		str	r2, [r3]
 212              		.syntax unified
 213              	@ 27 "Src/main.c" 1
 214 005c BFF34F8F 		dsb
 215              	@ 0 "" 2
 216              	@ 27 "Src/main.c" 1
 217 0060 BFF36F8F 		isb
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221 0064 E4E7     		b	.L13
 222              	.L17:
  35:Src/main.c    **** 		
 223              		.loc 1 35 0 is_stmt 1
 224 0066 0F4B     		ldr	r3, .L18+20
 225 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 006a 8DF80B30 		strb	r3, [sp, #11]
  37:Src/main.c    **** 		portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 227              		.loc 1 37 0
 228 006e 01A9     		add	r1, sp, #4
 229 0070 0D4B     		ldr	r3, .L18+24
 230 0072 1868     		ldr	r0, [r3]
 231 0074 FFF7FEFF 		bl	vTaskNotifyGiveFromISR
 232              	.LVL18:
  38:Src/main.c    ****     }
 233              		.loc 1 38 0
 234 0078 019B     		ldr	r3, [sp, #4]
 235 007a 002B     		cmp	r3, #0
 236 007c DFD0     		beq	.L12
  38:Src/main.c    ****     }
 237              		.loc 1 38 0 is_stmt 0 discriminator 1
 238 007e 084B     		ldr	r3, .L18+16
 239 0080 4FF08052 		mov	r2, #268435456
 240 0084 1A60     		str	r2, [r3]
 241              		.syntax unified
 242              	@ 38 "Src/main.c" 1
 243 0086 BFF34F8F 		dsb
 244              	@ 0 "" 2
 245              	@ 38 "Src/main.c" 1
 246 008a BFF36F8F 		isb
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 8


 247              	@ 0 "" 2
  41:Src/main.c    **** 
 248              		.loc 1 41 0 is_stmt 1 discriminator 1
 249              		.thumb
 250              		.syntax unified
 251 008e D6E7     		b	.L12
 252              	.L19:
 253              		.align	2
 254              	.L18:
 255 0090 000C0240 		.word	1073875968
 256 0094 00100140 		.word	1073811456
 257 0098 00000000 		.word	.LANCHOR0
 258 009c 00000000 		.word	.LANCHOR1
 259 00a0 04ED00E0 		.word	-536810236
 260 00a4 04100140 		.word	1073811460
 261 00a8 00000000 		.word	.LANCHOR2
 262              		.cfi_endproc
 263              	.LFE5:
 265              		.section	.text.vApplicationIdleHook,"ax",%progbits
 266              		.align	1
 267              		.global	vApplicationIdleHook
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	vApplicationIdleHook:
 274              	.LFB6:
  44:Src/main.c    **** }
 275              		.loc 1 44 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
  45:Src/main.c    **** 
 280              		.loc 1 45 0
 281 0000 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE6:
 285              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 286              		.align	1
 287              		.global	vApplicationStackOverflowHook
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	vApplicationStackOverflowHook:
 294              	.LFB7:
  47:Src/main.c    **** 	while(1){
 295              		.loc 1 47 0
 296              		.cfi_startproc
 297              		@ Volatile: function does not return.
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.L22:
 302 0000 FEE7     		b	.L22
 303              		.cfi_endproc
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 9


 304              	.LFE7:
 306              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 307              		.align	1
 308              		.global	vApplicationMallocFailedHook
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	vApplicationMallocFailedHook:
 315              	.LFB8:
  52:Src/main.c    **** 	while(1){
 316              		.loc 1 52 0
 317              		.cfi_startproc
 318              		@ Volatile: function does not return.
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322              	.L24:
 323 0000 FEE7     		b	.L24
 324              		.cfi_endproc
 325              	.LFE8:
 327              		.section	.text.rcc_enableclk,"ax",%progbits
 328              		.align	1
 329              		.global	rcc_enableclk
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	rcc_enableclk:
 336              	.LFB9:
  57:Src/main.c    **** 	enable_rcc_gpioh();
 337              		.loc 1 57 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
  58:Src/main.c    **** 	enable_rcc_gpiod();
 342              		.loc 1 58 0
 343 0000 024A     		ldr	r2, .L26
 344 0002 1368     		ldr	r3, [r2]
  61:Src/main.c    **** }
 345              		.loc 1 61 0
 346 0004 43F08A03 		orr	r3, r3, #138
 347 0008 1360     		str	r3, [r2]
  62:Src/main.c    **** void init_interrupt( ){
 348              		.loc 1 62 0
 349 000a 7047     		bx	lr
 350              	.L27:
 351              		.align	2
 352              	.L26:
 353 000c 30380240 		.word	1073887280
 354              		.cfi_endproc
 355              	.LFE9:
 357              		.section	.text.init_interrupt,"ax",%progbits
 358              		.align	1
 359              		.global	init_interrupt
 360              		.syntax unified
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 10


 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	init_interrupt:
 366              	.LFB10:
  63:Src/main.c    **** 	
 367              		.loc 1 63 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              	.LCFI9:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
  69:Src/main.c    ****     temp_reg |= (1 << 6);
 376              		.loc 1 69 0
 377 0002 084A     		ldr	r2, .L30
 378 0004 1368     		ldr	r3, [r2]
 379              	.LVL19:
  75:Src/main.c    ****     write_reg(mUSART_CR1(mUSART1), temp_reg);
 380              		.loc 1 75 0
 381 0006 43F06003 		orr	r3, r3, #96
 382              	.LVL20:
  76:Src/main.c    **** 	
 383              		.loc 1 76 0
 384 000a 1360     		str	r3, [r2]
 385              	.LVL21:
  84:Src/main.c    **** 	
 386              		.loc 1 84 0
 387 000c 064B     		ldr	r3, .L30+4
 388 000e 074A     		ldr	r2, .L30+8
 389 0010 1A60     		str	r2, [r3]
  88:Src/main.c    **** 	mNVIC_EnableIRQ(USART1_IRQn);
 390              		.loc 1 88 0
 391 0012 0521     		movs	r1, #5
 392 0014 2520     		movs	r0, #37
 393 0016 FFF7FEFF 		bl	mNVIC_SetPriority
 394              	.LVL22:
  89:Src/main.c    **** 
 395              		.loc 1 89 0
 396 001a 2520     		movs	r0, #37
 397 001c FFF7FEFF 		bl	mNVIC_EnableIRQ
 398              	.LVL23:
  91:Src/main.c    **** 	
 399              		.loc 1 91 0
 400              		.syntax unified
 401              	@ 91 "Src/main.c" 1
 402 0020 62B6     		cpsie i
 403              	@ 0 "" 2
  93:Src/main.c    **** void config_pin()
 404              		.loc 1 93 0
 405              		.thumb
 406              		.syntax unified
 407 0022 08BD     		pop	{r3, pc}
 408              	.L31:
 409              		.align	2
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 11


 410              	.L30:
 411 0024 0C100140 		.word	1073811468
 412 0028 0CED00E0 		.word	-536810228
 413 002c 0003FA05 		.word	100270848
 414              		.cfi_endproc
 415              	.LFE10:
 417              		.section	.text.config_pin,"ax",%progbits
 418              		.align	1
 419              		.global	config_pin
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv4-sp-d16
 425              	config_pin:
 426              	.LFB11:
  95:Src/main.c    **** 	mGPIO_TypeDef GPIO_Init;
 427              		.loc 1 95 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 24
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 70B5     		push	{r4, r5, r6, lr}
 432              	.LCFI10:
 433              		.cfi_def_cfa_offset 16
 434              		.cfi_offset 4, -16
 435              		.cfi_offset 5, -12
 436              		.cfi_offset 6, -8
 437              		.cfi_offset 14, -4
 438 0002 86B0     		sub	sp, sp, #24
 439              	.LCFI11:
 440              		.cfi_def_cfa_offset 40
  97:Src/main.c    **** 	GPIO_Init.moder = mGPIO_MODER_OUTPUT;
 441              		.loc 1 97 0
 442 0004 4FF47043 		mov	r3, #61440
 443 0008 0093     		str	r3, [sp]
  98:Src/main.c    **** 	GPIO_Init.type = mPUSH_PULL;
 444              		.loc 1 98 0
 445 000a 0125     		movs	r5, #1
 446 000c 0195     		str	r5, [sp, #4]
  99:Src/main.c    **** 	GPIO_Init.pull  = mNO_PULL;
 447              		.loc 1 99 0
 448 000e 0024     		movs	r4, #0
 449 0010 0294     		str	r4, [sp, #8]
 100:Src/main.c    **** 	GPIO_Init.speed = mFAST_SPEED;
 450              		.loc 1 100 0
 451 0012 0394     		str	r4, [sp, #12]
 101:Src/main.c    **** 	init_pin(mGPIOD , &GPIO_Init);
 452              		.loc 1 101 0
 453 0014 0226     		movs	r6, #2
 454 0016 0496     		str	r6, [sp, #16]
 102:Src/main.c    **** 	
 455              		.loc 1 102 0
 456 0018 6946     		mov	r1, sp
 457 001a 0748     		ldr	r0, .L34
 458 001c FFF7FEFF 		bl	init_pin
 459              	.LVL24:
 106:Src/main.c    **** 	GPIO_Init.moder = mGPIO_MODER_ALT;
 460              		.loc 1 106 0
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 12


 461 0020 0095     		str	r5, [sp]
 107:Src/main.c    **** 	GPIO_Init.type = mPUSH_PULL;
 462              		.loc 1 107 0
 463 0022 0196     		str	r6, [sp, #4]
 108:Src/main.c    **** 	GPIO_Init.pull  = mNO_PULL;
 464              		.loc 1 108 0
 465 0024 0294     		str	r4, [sp, #8]
 109:Src/main.c    **** 	GPIO_Init.speed = mFAST_SPEED;
 466              		.loc 1 109 0
 467 0026 0394     		str	r4, [sp, #12]
 110:Src/main.c    **** 	GPIO_Init.alternate = 1;
 468              		.loc 1 110 0
 469 0028 0496     		str	r6, [sp, #16]
 111:Src/main.c    **** 	init_pin(mGPIOA , &GPIO_Init); 
 470              		.loc 1 111 0
 471 002a 0595     		str	r5, [sp, #20]
 112:Src/main.c    **** }
 472              		.loc 1 112 0
 473 002c 6946     		mov	r1, sp
 474 002e 0348     		ldr	r0, .L34+4
 475 0030 FFF7FEFF 		bl	init_pin
 476              	.LVL25:
 113:Src/main.c    **** void idle_task(void * pvParameters ){
 477              		.loc 1 113 0
 478 0034 06B0     		add	sp, sp, #24
 479              	.LCFI12:
 480              		.cfi_def_cfa_offset 16
 481              		@ sp needed
 482 0036 70BD     		pop	{r4, r5, r6, pc}
 483              	.L35:
 484              		.align	2
 485              	.L34:
 486 0038 000C0240 		.word	1073875968
 487 003c 00000240 		.word	1073872896
 488              		.cfi_endproc
 489              	.LFE11:
 491              		.section	.text.vUart_Send,"ax",%progbits
 492              		.align	1
 493              		.global	vUart_Send
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	vUart_Send:
 500              	.LFB14:
 139:Src/main.c    **** void vUart_Send(char c){
 501              		.loc 1 139 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL26:
 506 0000 10B5     		push	{r4, lr}
 507              	.LCFI13:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
 511 0002 0446     		mov	r4, r0
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 13


 140:Src/main.c    **** 	ulTaskNotifyTake(pdTRUE , 0);
 512              		.loc 1 140 0
 513 0004 0021     		movs	r1, #0
 514 0006 0120     		movs	r0, #1
 515              	.LVL27:
 516 0008 FFF7FEFF 		bl	ulTaskNotifyTake
 517              	.LVL28:
 141:Src/main.c    **** 	usart_send_byte(c);
 518              		.loc 1 141 0
 519 000c 2046     		mov	r0, r4
 520 000e FFF7FEFF 		bl	usart_send_byte
 521              	.LVL29:
 142:Src/main.c    **** 	
 143:Src/main.c    **** 	// block time = 100 ticks
 144:Src/main.c    **** 	ulTaskNotifyTake(pdTRUE , 100);
 522              		.loc 1 144 0
 523 0012 6421     		movs	r1, #100
 524 0014 0120     		movs	r0, #1
 525 0016 FFF7FEFF 		bl	ulTaskNotifyTake
 526              	.LVL30:
 145:Src/main.c    **** 	
 146:Src/main.c    **** }
 527              		.loc 1 146 0
 528 001a 10BD     		pop	{r4, pc}
 529              		.cfi_endproc
 530              	.LFE14:
 532              		.section	.text.test_task_send,"ax",%progbits
 533              		.align	1
 534              		.global	test_task_send
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv4-sp-d16
 540              	test_task_send:
 541              	.LFB15:
 147:Src/main.c    **** void test_task_send(void *pvParameters){
 542              		.loc 1 147 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL31:
 547 0000 10B5     		push	{r4, lr}
 548              	.LCFI14:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552              	.LVL32:
 148:Src/main.c    **** 	
 149:Src/main.c    **** 	unsigned char c  = 65 ; 
 150:Src/main.c    **** 	// lan dau tien ngat xay ra khong phai la do truyen du lieu
 151:Src/main.c    **** 	ok = 0 ;
 553              		.loc 1 151 0
 554 0002 074B     		ldr	r3, .L41
 555 0004 0022     		movs	r2, #0
 556 0006 1A70     		strb	r2, [r3]
 149:Src/main.c    **** 	// lan dau tien ngat xay ra khong phai la do truyen du lieu
 557              		.loc 1 149 0
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 14


 558 0008 4124     		movs	r4, #65
 559              	.LVL33:
 560              	.L39:
 152:Src/main.c    **** 	while(1){
 153:Src/main.c    **** 		
 154:Src/main.c    **** 		vUart_Send(c);
 561              		.loc 1 154 0 discriminator 1
 562 000a 2046     		mov	r0, r4
 563 000c FFF7FEFF 		bl	vUart_Send
 564              	.LVL34:
 155:Src/main.c    **** 		c += 1 ;
 565              		.loc 1 155 0 discriminator 1
 566 0010 0134     		adds	r4, r4, #1
 567              	.LVL35:
 568 0012 E4B2     		uxtb	r4, r4
 569              	.LVL36:
 156:Src/main.c    **** 		vTaskDelay(pdMS_TO_TICKS(1000));
 570              		.loc 1 156 0 discriminator 1
 571 0014 4FF47A70 		mov	r0, #1000
 572 0018 FFF7FEFF 		bl	vTaskDelay
 573              	.LVL37:
 574 001c F5E7     		b	.L39
 575              	.L42:
 576 001e 00BF     		.align	2
 577              	.L41:
 578 0020 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE15:
 582              		.section	.text.main,"ax",%progbits
 583              		.align	1
 584              		.global	main
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	main:
 591              	.LFB16:
 157:Src/main.c    **** 	}
 158:Src/main.c    **** 	
 159:Src/main.c    **** }
 160:Src/main.c    **** 
 161:Src/main.c    **** u32_t mpin12 = 12;
 162:Src/main.c    **** u32_t mpin13 = 13;
 163:Src/main.c    **** u32_t mpin14 = 14;
 164:Src/main.c    **** u32_t mpin15 = 15;
 165:Src/main.c    **** 
 166:Src/main.c    **** int main(void)
 167:Src/main.c    **** {
 592              		.loc 1 167 0
 593              		.cfi_startproc
 594              		@ Volatile: function does not return.
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 00B5     		push	{lr}
 598              	.LCFI15:
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 14, -4
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 15


 601 0002 85B0     		sub	sp, sp, #20
 602              	.LCFI16:
 603              		.cfi_def_cfa_offset 24
 168:Src/main.c    **** 
 169:Src/main.c    **** 	//100mhz
 170:Src/main.c    **** 	system_init( 8, 200, mPLLP_DIV4 , mSRC_PLL, mAHB_DIV1 ,mAPB_DIV2  , mAPB_DIV1);
 604              		.loc 1 170 0
 605 0004 0024     		movs	r4, #0
 606 0006 0294     		str	r4, [sp, #8]
 607 0008 0423     		movs	r3, #4
 608 000a 0193     		str	r3, [sp, #4]
 609 000c 0094     		str	r4, [sp]
 610 000e 0223     		movs	r3, #2
 611 0010 0122     		movs	r2, #1
 612 0012 C821     		movs	r1, #200
 613 0014 0820     		movs	r0, #8
 614 0016 FFF7FEFF 		bl	system_init
 615              	.LVL38:
 171:Src/main.c    **** 	rcc_enableclk();
 616              		.loc 1 171 0
 617 001a FFF7FEFF 		bl	rcc_enableclk
 618              	.LVL39:
 172:Src/main.c    **** 	config_pin();
 619              		.loc 1 172 0
 620 001e FFF7FEFF 		bl	config_pin
 621              	.LVL40:
 173:Src/main.c    **** 	uart_init(100 , 16 , 9600);
 622              		.loc 1 173 0
 623 0022 4FF41652 		mov	r2, #9600
 624 0026 1021     		movs	r1, #16
 625 0028 6420     		movs	r0, #100
 626 002a FFF7FEFF 		bl	uart_init
 627              	.LVL41:
 174:Src/main.c    **** 	init_interrupt();
 628              		.loc 1 174 0
 629 002e FFF7FEFF 		bl	init_interrupt
 630              	.LVL42:
 175:Src/main.c    **** 	//usart_send_string("hello from mcu");
 176:Src/main.c    **** 	xTaskCreate(idle_task , "idle_task" , 128 ,&mpin12 ,  1 , NULL);
 631              		.loc 1 176 0
 632 0032 0194     		str	r4, [sp, #4]
 633 0034 0123     		movs	r3, #1
 634 0036 0093     		str	r3, [sp]
 635 0038 0D4B     		ldr	r3, .L46
 636 003a 8022     		movs	r2, #128
 637 003c 0D49     		ldr	r1, .L46+4
 638 003e 0E48     		ldr	r0, .L46+8
 639 0040 FFF7FEFF 		bl	xTaskCreate
 640              	.LVL43:
 177:Src/main.c    **** 	xTaskCreate(notify_take_task , "task_receive" , 128 ,NULL ,  2 , &pxTask);
 641              		.loc 1 177 0
 642 0044 0D4B     		ldr	r3, .L46+12
 643 0046 0193     		str	r3, [sp, #4]
 644 0048 0225     		movs	r5, #2
 645 004a 0095     		str	r5, [sp]
 646 004c 2346     		mov	r3, r4
 647 004e 8022     		movs	r2, #128
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 16


 648 0050 0B49     		ldr	r1, .L46+16
 649 0052 0C48     		ldr	r0, .L46+20
 650 0054 FFF7FEFF 		bl	xTaskCreate
 651              	.LVL44:
 178:Src/main.c    **** 	xTaskCreate(test_task_send , "task_send" , 128 ,NULL ,  2 , &pxTask_receive);
 652              		.loc 1 178 0
 653 0058 0B4B     		ldr	r3, .L46+24
 654 005a 0193     		str	r3, [sp, #4]
 655 005c 0095     		str	r5, [sp]
 656 005e 2346     		mov	r3, r4
 657 0060 8022     		movs	r2, #128
 658 0062 0A49     		ldr	r1, .L46+28
 659 0064 0A48     		ldr	r0, .L46+32
 660 0066 FFF7FEFF 		bl	xTaskCreate
 661              	.LVL45:
 179:Src/main.c    **** 	
 180:Src/main.c    **** 	vTaskStartScheduler();
 662              		.loc 1 180 0
 663 006a FFF7FEFF 		bl	vTaskStartScheduler
 664              	.LVL46:
 665              	.L44:
 666 006e FEE7     		b	.L44
 667              	.L47:
 668              		.align	2
 669              	.L46:
 670 0070 00000000 		.word	.LANCHOR3
 671 0074 00000000 		.word	.LC0
 672 0078 00000000 		.word	idle_task
 673 007c 00000000 		.word	.LANCHOR2
 674 0080 0C000000 		.word	.LC1
 675 0084 00000000 		.word	notify_take_task
 676 0088 00000000 		.word	.LANCHOR1
 677 008c 1C000000 		.word	.LC2
 678 0090 00000000 		.word	test_task_send
 679              		.cfi_endproc
 680              	.LFE16:
 682              		.global	mpin15
 683              		.global	mpin14
 684              		.global	mpin13
 685              		.global	mpin12
 686              		.global	ok
 687              		.global	pxTask_receive
 688              		.global	pxTask
 689              		.section	.bss.pxTask,"aw",%nobits
 690              		.align	2
 691              		.set	.LANCHOR2,. + 0
 694              	pxTask:
 695 0000 00000000 		.space	4
 696              		.section	.bss.pxTask_receive,"aw",%nobits
 697              		.align	2
 698              		.set	.LANCHOR1,. + 0
 701              	pxTask_receive:
 702 0000 00000000 		.space	4
 703              		.section	.data.mpin12,"aw",%progbits
 704              		.align	2
 705              		.set	.LANCHOR3,. + 0
 708              	mpin12:
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 17


 709 0000 0C000000 		.word	12
 710              		.section	.data.mpin13,"aw",%progbits
 711              		.align	2
 714              	mpin13:
 715 0000 0D000000 		.word	13
 716              		.section	.data.mpin14,"aw",%progbits
 717              		.align	2
 720              	mpin14:
 721 0000 0E000000 		.word	14
 722              		.section	.data.mpin15,"aw",%progbits
 723              		.align	2
 726              	mpin15:
 727 0000 0F000000 		.word	15
 728              		.section	.data.ok,"aw",%progbits
 729              		.set	.LANCHOR0,. + 0
 732              	ok:
 733 0000 01       		.byte	1
 734              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 735              		.align	2
 736              	.LC0:
 737 0000 69646C65 		.ascii	"idle_task\000"
 737      5F746173 
 737      6B00
 738 000a 0000     		.space	2
 739              	.LC1:
 740 000c 7461736B 		.ascii	"task_receive\000"
 740      5F726563 
 740      65697665 
 740      00
 741 0019 000000   		.space	3
 742              	.LC2:
 743 001c 7461736B 		.ascii	"task_send\000"
 743      5F73656E 
 743      6400
 744              		.text
 745              	.Letext0:
 746              		.file 2 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 747              		.file 3 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 748              		.file 4 "../FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 749              		.file 5 "../FreeRTOS/Source/include/task.h"
 750              		.file 6 "E:/Users/VuHaiLong/Desktop/mbed/hocRTOS/mylib/mInc/mtype.h"
 751              		.file 7 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 752              		.file 8 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 753              		.file 9 "c:\\tools\\gcc7_2017-q4-major\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef.h"
 754              		.file 10 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 755              		.file 11 "Inc/stm32f4xx_it.h"
 756              		.file 12 "c:\\tools\\gcc7_2017-q4-major\\arm-none-eabi\\include\\stdlib.h"
 757              		.file 13 "E:/Users/VuHaiLong/Desktop/mbed/hocRTOS/mylib/mInc/clock.h"
 758              		.file 14 "E:/Users/VuHaiLong/Desktop/mbed/hocRTOS/mylib/mInc/uart.h"
 759              		.file 15 "E:/Users/VuHaiLong/Desktop/mbed/hocRTOS/mylib/mInc/gpio.h"
 760              		.file 16 "E:/Users/VuHaiLong/Desktop/mbed/hocRTOS/mylib/mInc/const.h"
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
E:\msys32\tmp\ccKOEw9a.s:18     .text.idle_task:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:25     .text.idle_task:00000000 idle_task
E:\msys32\tmp\ccKOEw9a.s:58     .text.idle_task:00000018 $d
E:\msys32\tmp\ccKOEw9a.s:63     .text.notify_take_task:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:70     .text.notify_take_task:00000000 notify_take_task
E:\msys32\tmp\ccKOEw9a.s:122    .text.notify_take_task:0000002c $d
E:\msys32\tmp\ccKOEw9a.s:128    .text.USART1_IRQHandler:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:135    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
E:\msys32\tmp\ccKOEw9a.s:255    .text.USART1_IRQHandler:00000090 $d
E:\msys32\tmp\ccKOEw9a.s:266    .text.vApplicationIdleHook:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:273    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
E:\msys32\tmp\ccKOEw9a.s:286    .text.vApplicationStackOverflowHook:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:293    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
E:\msys32\tmp\ccKOEw9a.s:307    .text.vApplicationMallocFailedHook:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:314    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
E:\msys32\tmp\ccKOEw9a.s:328    .text.rcc_enableclk:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:335    .text.rcc_enableclk:00000000 rcc_enableclk
E:\msys32\tmp\ccKOEw9a.s:353    .text.rcc_enableclk:0000000c $d
E:\msys32\tmp\ccKOEw9a.s:358    .text.init_interrupt:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:365    .text.init_interrupt:00000000 init_interrupt
E:\msys32\tmp\ccKOEw9a.s:411    .text.init_interrupt:00000024 $d
E:\msys32\tmp\ccKOEw9a.s:418    .text.config_pin:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:425    .text.config_pin:00000000 config_pin
E:\msys32\tmp\ccKOEw9a.s:486    .text.config_pin:00000038 $d
E:\msys32\tmp\ccKOEw9a.s:492    .text.vUart_Send:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:499    .text.vUart_Send:00000000 vUart_Send
E:\msys32\tmp\ccKOEw9a.s:533    .text.test_task_send:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:540    .text.test_task_send:00000000 test_task_send
E:\msys32\tmp\ccKOEw9a.s:578    .text.test_task_send:00000020 $d
E:\msys32\tmp\ccKOEw9a.s:583    .text.main:00000000 $t
E:\msys32\tmp\ccKOEw9a.s:590    .text.main:00000000 main
E:\msys32\tmp\ccKOEw9a.s:670    .text.main:00000070 $d
E:\msys32\tmp\ccKOEw9a.s:726    .data.mpin15:00000000 mpin15
E:\msys32\tmp\ccKOEw9a.s:720    .data.mpin14:00000000 mpin14
E:\msys32\tmp\ccKOEw9a.s:714    .data.mpin13:00000000 mpin13
E:\msys32\tmp\ccKOEw9a.s:708    .data.mpin12:00000000 mpin12
E:\msys32\tmp\ccKOEw9a.s:732    .data.ok:00000000 ok
E:\msys32\tmp\ccKOEw9a.s:701    .bss.pxTask_receive:00000000 pxTask_receive
E:\msys32\tmp\ccKOEw9a.s:694    .bss.pxTask:00000000 pxTask
E:\msys32\tmp\ccKOEw9a.s:690    .bss.pxTask:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:697    .bss.pxTask_receive:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:704    .data.mpin12:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:711    .data.mpin13:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:717    .data.mpin14:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:723    .data.mpin15:00000000 $d
E:\msys32\tmp\ccKOEw9a.s:735    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
GPIO_TongglePin
vTaskDelay
ulTaskNotifyTake
usart_send_byte
vTaskNotifyGiveFromISR
mNVIC_SetPriority
mNVIC_EnableIRQ
ARM GAS  E:\msys32\tmp\ccKOEw9a.s 			page 19


init_pin
system_init
uart_init
xTaskCreate
vTaskStartScheduler
